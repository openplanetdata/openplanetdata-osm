name: Build & Publish CRCP Snapshots

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build & Publish GOL Snapshots"]
    types: [completed]

jobs:
  build:
    runs-on: openplanetdata-cortex

    outputs:
      tag: ${{ steps.tag.outputs.tag }}

    steps:
      - name: Set date tag
        id: tag
        uses: openplanetdata/actions/set-date-tag@main

      - name: Install GOL 2.x
        uses: openplanetdata/actions/install-gol@main
        with:
          version: 2
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download latest published GOL
        uses: openplanetdata/actions/download@main
        with:
          remote_path: osm/planet/gol/v2/planet-latest.osm.gol

      - name: Extract CRCP features
        run: |
          time gol query planet-latest.osm.gol "a['ISO3166-1:alpha2']" --keys=ISO3166-1:alpha2 -f=geojson > countries.geojson
          time gol query planet-latest.osm.gol "a['ISO3166-2']" --keys=ISO3166-2 -f=geojson > regions.geojson
          time gol query planet-latest.osm.gol "n['place'='city', 'town', 'village'][population>10]" --keys=lat,lon,name,name:en -f=geojson > cities.geojson
          time gol query planet-latest.osm.gol "n[addr:postcode]" --keys=lat,lon,addr:postcode -f=geojson > postalcodes.geojson

      - name: Convert GeoJSON â†’ GeoParquet
        run: |
          docker run --rm -v "$PWD":/data ghcr.io/osgeo/gdal:ubuntu-full-latest bash -c '
            set -euo pipefail
            for f in /data/*.geojson; do
              base=$(basename "$f" .geojson)
              ogr2ogr -f Parquet "/data/${base}-latest.osm.parquet" "$f" \
                      -lco GEOMETRY_ENCODING=WKB -lco COMPRESSION=ZSTD
            done
          '
          ls -alh

      - name: Cleanup downloaded files
        if: always()
        uses: openplanetdata/actions/cleanup-downloads@main

      - name: Cleanup generated files
        if: always()
        run: |
          rm -f *.geojson
          rm -f *-latest.osm.parquet *-latest.osm.parquet.{sha256,metadata}
          find /tmp -name "tmp.*" -user "$USER" -delete 2>/dev/null || true

  publish:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        dataset: [countries, regions, cities, postalcodes]
    env:
      FILE_NAME: ${{ matrix.dataset }}-latest.osm.parquet

    steps:
      - name: Create metadata for ${{ matrix.dataset }} file
        id: create_meta
        uses: openplanetdata/actions/create-metadata@main
        with:
          file: ${{ env.FILE_NAME }}
          remote_filename: ${{ env.FILE_NAME }}
          remote_path: /osm/${{ matrix.dataset }}/geoparquet
          remote_version: 1
          tags: |
            ${{ matrix.dataset }}
            geoparquet
            openstreetmap
            private

      - name: Publish ${{ matrix.dataset }} dataset to R2
        uses: openplanetdata/actions/upload@main
        env:
          RCLONE_CONFIG_DATA: ${{ secrets.RCLONE_CONFIG_DATA }}
        with:
          file: ${{ env.FILE_NAME }}
          remote_filename: ${{ env.FILE_NAME }}
          remote_path: /osm/${{ matrix.dataset }}/geoparquet
          remote_version: 1

      - name: Cleanup workspace
        if: always()
        run: |
          rm -f ${{ env.FILE_NAME }} ${{ env.FILE_NAME }}.{metadata,sha256}
