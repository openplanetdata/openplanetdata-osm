name: Planet GeoDesk v2

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Planet PBF"]
    types: [completed]
    branches: [main]

jobs:
  build-gol-gob:
    runs-on: self-hosted

    outputs:
      tag: ${{ steps.date.outputs.tag }}

    steps:
      - name: Set date tag
        id: date
        uses: openplanetdata/actions/set-date-tag@main

      - name: Install GOL 2.x
        uses: openplanetdata/actions/install-gol@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: 2

      - name: Download latest published PBF
        uses: openplanetdata/actions/download@main
        with:
          remote_path: osm/planet/pbf/planet-latest.osm.pbf

      - name: Rename downloaded PBF and cleanup working directory
        run: |
          rm -rf *.osm-work
          mv planet-latest.osm.pbf "planet-${{ steps.date.outputs.tag }}.osm.pbf"

      - name: Build GOL variant
        run: |
          g="planet-${{ steps.date.outputs.tag }}.osm.gol"
          p="planet-${{ steps.date.outputs.tag }}.osm.pbf"

          # Set temp directory to current working directory
          export TMPDIR="$PWD/.tmp"
          mkdir -p "$TMPDIR"

          echo "Starting build at $(date -u +%Y-%m-%d_%H:%M:%S)"
          echo "Using TMPDIR: $TMPDIR"

          time gol build --updatable --yes "$g" "$p"
  
          echo "Build finished at $(date -u +%Y-%m-%d_%H:%M:%S)"
          ls -alh "$g"

      - name: Create metadata
        id: create_meta
        uses: openplanetdata/actions/create-metadata@main
        with:
          file: planet-${{ steps.date.outputs.tag }}.osm.gol
          remote_filename: planet-latest.osm.gol
          remote_path: /osm/planet/gol
          remote_version: 2
          tags: |
            geodesk
            gol
            openstreetmap
            public

      - name: Build GOB
        run: |
          gol="planet-${{ steps.date.outputs.tag }}.osm.gol"
          gob="planet-${{ steps.date.outputs.tag }}.osm.gob"
          time gol save "$gol" "$gob"
          ls -alh

      - name: Upload GOL to R2
        uses: openplanetdata/actions/upload@main
        env:
          RCLONE_CONFIG_DATA: ${{ secrets.RCLONE_CONFIG_DATA }}
        with:
          file: planet-${{ steps.date.outputs.tag }}.osm.gol
          remote_filename: planet-latest.osm.gol
          remote_path: /osm/planet/gol
          remote_version: 2

      - name: Create GOB metadata
        id: create_meta_gob
        uses: openplanetdata/actions/create-metadata@main
        with:
          file: planet-${{ steps.date.outputs.tag }}.osm.gob
          remote_filename: planet-latest.osm.gob
          remote_path: /osm/planet/gob
          remote_version: 2
          tags: |
            geodesk
            gob
            gol
            openstreetmap
            public

      - name: Upload GOB to R2
        uses: openplanetdata/actions/upload@main
        env:
          RCLONE_CONFIG_DATA: ${{ secrets.RCLONE_CONFIG_DATA }}
        with:
          file: planet-${{ steps.date.outputs.tag }}.osm.gob
          remote_filename: planet-latest.osm.gob
          remote_path: /osm/planet/gob
          remote_version: 2

      - name: Cleanup downloaded files
        if: always()
        uses: openplanetdata/actions/cleanup-downloads@main

      - name: Cleanup generated files
        if: always()
        run: |
          rm -f planet-*.osm.gob planet-*.osm.gol planet-*.osm.gob.{sha256,metadata} planet-*.osm.gol.{sha256,metadata}
          find /tmp -name "tmp.*" -user "$USER" -delete 2>/dev/null || true
